apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'


/*
 * Gets the version name from the latest Git tag
 */
def getVersionName = {
    def stdout = new ByteArrayOutputStream()
    try {
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (e) {
        println("Can't get version from git: " + e);
        return "adhoc"
    }
}

allprojects{
    version = "${getVersionName()}"
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 0
        versionName version
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}



configurations {
    javadocDeps
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    failOnError false
    options.author = true
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath()
            .join(File.pathSeparator))
}

task generateJavadocsJar(type: Jar) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

task allJavadoc(dependsOn: ['assembleRelease'], type: Javadoc) {
    classpath += configurations.javadocDeps
}

generateJavadocsJar.dependsOn generateJavadocs

artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

// Upload to bintray

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    pkg {
        repo = 'maven'
        name = 'it.near.sdk.core'

        licenses = ['MIT']
        vcsUrl = 'https://github.com/catt-stefano/near-sdk-core.git'
        websiteUrl = 'https://github.com/catt-stefano/near-sdk-core'
    }
    configurations = ['archives']
}

// Upload docs on ftp

repositories{
    mavenCentral()
}
configurations {
    ftpAntTask
}
dependencies{
    ftpAntTask ("org.apache.ant:ant-commons-net:1.8.4") {
        module("commons-net:commons-net:1.4.1") {
            dependencies "oro:oro:2.0.8:jar"
        }
    }
}
task uploadDocs << {
    def ftpHost = properties.getProperty("docs.ftp.host")
    def ftpDir = properties.getProperty("docs.ftp.dir")
    def ftpUser = properties.getProperty("docs.ftp.user")
    def ftpPassword = properties.getProperty("docs.ftp.password")
    ant {
        taskdef(name: 'ftp',
                classname: 'org.apache.tools.ant.taskdefs.optional.net.FTP',
                classpath: configurations.ftpAntTask.asPath)
        ftp(server: ftpHost, userid: ftpUser, password: ftpPassword, remoteDir: ftpDir) {
            fileset(dir: 'build/docs/javadoc/')
        }
    }
}

group = 'it.near.sdk.core'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-annotations:23.3.0'
    javadocDeps 'com.android.support:support-annotations:23.3.0'
    compile 'com.android.support:support-v4:23.3.0'
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'org.altbeacon:android-beacon-library:2.8.1'
    compile "com.google.android.gms:play-services-gcm:8.4.0"
}


buildscript {
    repositories {
        jcenter()
        flatDir{
            dirs 'libs'
        }
    }
}
